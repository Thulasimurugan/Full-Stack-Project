{"version":3,"file":"static/js/822.1498bc75.chunk.js","mappings":"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","sources":["Component/Forgot/Email/index.js","Component/Forgot/Otp/index.js","Component/Forgot/ResetPassword/index.js","Layout/Forgot/index.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport Axios from 'axios';\r\nimport Validator from 'validator';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { Row, Col, Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport { FaEye, FaEyeSlash, FaUserCircle, FaApple ,FaGoogle } from 'react-icons/fa';\r\nimport { GrUserWorker } from 'react-icons/gr';\r\nimport { MdEmail } from 'react-icons/md';\r\nimport { IoIosLock } from 'react-icons/io';\r\nimport heartImage  from '../../../Assets/Images/heart.jpeg';\r\nimport Image1 from '../../../Assets/Images/product-8-400x400.png.png';\r\n\r\n\r\nfunction Register({showComponent, setShowComponent}) {\r\n    const [ visible, setVisible ] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [ forgot, setForgot ] = useState({\r\n        email:'',\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setForgot({\r\n            ...forgot,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    const customStyles = `.custom-placeholder::placeholder {\r\n        color: #FFFFFF;\r\n        opacity: 1;\r\n    }`;\r\n\r\n    const handleSubmit = async (event) => {\r\n        if(Validator.isEmpty(forgot.email)) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'Email is Required',\r\n            })\r\n        } else if(!Validator.isEmail(forgot.email)) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'Enter a Valid Email',\r\n            })\r\n        } else {\r\n            event.preventDefault();\r\n            const trimObject = Object.fromEntries(\r\n                Object.entries(forgot).map(([key,value]) => ([key,key === \"email\" ?  value.toLowerCase() : value || typeof value === 'string' ? value.trim() : value]))\r\n            );\r\n            try{\r\n                const emailResponce = await Axios.post('http://127.0.0.1:5000/vitamins/verifyEmail',trimObject);\r\n                console.log(emailResponce);\r\n                if(emailResponce.data.status === 200){\r\n                        setShowComponent(1);\r\n                        localStorage.setItem('showComponent', showComponent);\r\n                        localStorage.setItem(\"email\", emailResponce.data.userData[0].email);\r\n                        const emailButton = document.getElementById('emailButton');\r\n                        emailButton.textContent = \"OTP Sending....\";\r\n                        emailButton.setAttribute('disabled','true');\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = 'limegreen';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'success',\r\n                            title:`Email Verified Successfully We were sended otp at your email`,\r\n                        });\r\n                    } else if(emailResponce.data?.arMissField) {\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = '#ff6347';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'error',\r\n                            title:`${emailResponce.data.arMissField[0]} is Required`,\r\n                        });\r\n                    } else {\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = '#ff6347';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'error',\r\n                            title:`${emailResponce.data.msg}`,\r\n                        });\r\n                    }\r\n            } catch(error){\r\n                if(error.message){\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position:'top-end',\r\n                        showCancelButton:false,\r\n                        showConfirmButton:false,\r\n                        timer:4000,\r\n                        timerProgressBar: true,\r\n                        didOpen: (toast) => {\r\n                            const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                            if(timerProgressBar){\r\n                                timerProgressBar.style.backgroundColor = '#ff6347';\r\n                            }\r\n                            toast.onmouseenter = Swal.stopTimer;\r\n                            toast.onmouseleave = Swal.resumeTimer;\r\n                        }\r\n                    });\r\n                    Toast.fire({\r\n                        icon:'error',\r\n                        title:`Refresh this page Try again.`,\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n          <title>Reset Password</title>\r\n          <meta name=\"description\" content=\"Only the best when you choose products offered on our platform - high quality\r\ningredients for high quality products!\"/>\r\n          <meta name=\"keywords\" content=\"medical,medicine,tablet,hospital products,hospital,hospitals,vitamin,weight less,minerals\"/>\r\n        </Helmet>\r\n        <Row className='m-0 p-0 w-100 h-100 d-flex' style={{background: \"#E2F5FB\"}}>\r\n            <Col className='w-100 h-100 m-0 d-flex justify-content-center align-items-center px-3 py-3 py-sm-3 py-sm-3 py-md-5 px-md-5 py-lg-5 py-xl-4 py-xxl-5'>\r\n                <div className='w-100 m-0 p-0 flex-grow align-items-xl-center justify-content-xl-center rounded-2' style={{borderColor:'#727272', background:'#17414F',borderRadius:'10px'}}>\r\n                    <Row className='d-flex w-100 h-100 m-0 p-0'>\r\n                        <Col className='m-0 d-xl-flex d-xl-flex d-lg-flex d-md-flex d-sm-none d-none' style={{padding:'12px'}}>\r\n                            <div className='m-0 p-0 w-100 rounded-2 d-flex' style={{backgroundImage:`url(${heartImage})`,backgroundRepeat:'no-repeat',backgroundPosition:'center',backgroundSize:'100% 100%'}}>\r\n                            <div className='m-0 p-3 d-flex align-items-start justify-content-start gap-2 w-50'>\r\n                                <img src={Image1} alt='Image1' className='img-fluid' style={{height:'35px', width:'35px',borderRadius:'50%',border:'3px solid #17414F'}}/>\r\n                                <h5 style={{color:'#FFFFFF'}} className='m-0 p-0 fw-bolder mt-1 mb-1'>Vitamins</h5>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className='d-flex p-5 m-0 align-items-center justify-content-center'>\r\n                            <div className='flex-column m-0 p-0 w-100 p-xl-5'>\r\n                                <h2 className='m-0 p-0 w-100 d-flex' style={{color:'#FFFFFF'}}>Reset Password</h2>\r\n                                <div className='m-0 p-0 my-xxl-3 my-lg-3 my-md-3 my-sm-3 my-3 w-100'>\r\n                                    <p className='m-0 p-0 mt-1 mt-xl-0 mt-sm-1 mt-lg-0 mt-md-0' style={{color:'#FFFFFF'}}>Enter the email associated with your account and we'll send an email with OTP to reset your password.</p>\r\n                                </div>\r\n                                <Form className='p-0 m-0 flex-column' onSubmit={(event) => handleSubmit(event)}>\r\n                                    <div className='m-0 p-0 w-75 my-lg-5 my-md-4 my-sm-3 my-3'>\r\n                                        <style>{customStyles}</style>\r\n                                    <Form.Group className='w-100 m-0 p-0 border-0'>\r\n                                    <Form.Label className='text-light'>Email <span className='fw-bolder m-0 p-0' style={{color:'#FFFFFF'}}>*</span></Form.Label>\r\n                                            <InputGroup className='rounded-2' style={{border:'2px solid #FFFFFF'}}>\r\n                                            <InputGroup.Text style={{marginLeft:'0px',border:'none',borderRadius:'0px',color:'#FFFFFF',background:'rgba(255, 255, 255,0.1',outline:'none',boxShadow:'none'}}><MdEmail /></InputGroup.Text>\r\n                                                <Form.Control \r\n                                                    type={\"text\"}\r\n                                                    placeholder='Email'\r\n                                                    name='email'\r\n                                                    value={forgot.email}\r\n                                                    onChange={(event) => handleChange(event)}\r\n                                                    maxLength={400} \r\n                                                    className='fw-bolder custom-placeholder'\r\n                                                style={{marginLeft:'0px',border:'none',boxShadow:'none',outline:'none',background:'rgba(255, 255, 255,0.1)',color:'#FFFFFF'}}/>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <div className='m-0 p-0 w-100 my-xxl-4 my-xl-4 my-lg-4 my-md-4 my-sm-4 my-4 gap-2 d-flex'>\r\n                                             <p className='m-0 p-0 gap-3 mt-1 mt-xl-0 mt-sm-1 mt-lg-0 mt-md-0 fw-bolder'><Link className='text-light text-decoration-none' to={'/'}>Wait, I remember my password.</Link></p>\r\n                                        </div>\r\n                                        <Button className=\"bg-light w-100 mt-2 fw-bolder text-center border-0\" id=\"emailButton\" type='submit' style={{color:'#17414F'}}>Send OTP</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            </div> \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Register;","import { useState, useRef, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport doctorImage  from '../../../Assets/Images/doctorImage.jpeg';\r\nimport Image1 from '../../../Assets/Images/product-8-400x400.png.png';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nfunction ForgotOTP({showComponent,setShowComponent,length = 6}) {\r\n    const [otp, setOtp] = useState(Array(length).fill(\"\"));\r\n    const inputRef = useRef([]);\r\n\r\n    const handleChange = (event, index) => {\r\n        const value = event.target.value;\r\n        if(value === \" \") return;\r\n        if(isNaN(value)) return;\r\n\r\n        const newOtp = [...otp];\r\n        newOtp[index] = value;\r\n        setOtp(newOtp);\r\n\r\n        if(value && index < length - 1){\r\n            inputRef.current[index + 1].focus();\r\n        }\r\n\r\n    }\r\n\r\n    const customStyles = `.custom-placeholder::placeholder {\r\n        color: #FFFFFF;\r\n        opacity: 1;\r\n    }`;\r\n\r\n    const handleKeyDown = (event, index) => {\r\n        if(event.key === 'Backspace' && !otp[index] && length > 0 ){\r\n            if(index > 0){\r\n                inputRef.current[index - 1].focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleResend = () => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position:'top-end',\r\n            timer:3000,\r\n            timerProgressBar:true,\r\n            showConfirmButton:false,\r\n            didOpen: () => {\r\n                const timerProgressBar = document.querySelector(\".swal2-timer-progress-bar\");\r\n                if(timerProgressBar){\r\n                    timerProgressBar.style.backgroundColor = 'limegreen';\r\n                }\r\n            }\r\n        });\r\n        Toast.fire({\r\n            title:'OTP was sended check your email again',\r\n            icon:'success',\r\n        })\r\n    } \r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(otp.includes(\"\")) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'Enter a Valid OTP',\r\n            })\r\n        }  else {\r\n            const email = localStorage.getItem(\"email\");\r\n            const splitOpt = otp.join(\"\");\r\n            console.log(splitOpt);\r\n            try{\r\n                const trimObject = {\r\n                    otp:splitOpt,\r\n                    ...(email) && { email },\r\n                }\r\n                const otpResponce = await Axios.post('http://127.0.0.1:5000/vitamins/verifyOtp',trimObject);\r\n                \r\n                if(otpResponce.data.status === 200 || otpResponce.data.status === 201){\r\n                        setShowComponent(2);\r\n                        localStorage.setItem('showComponent', showComponent);\r\n                        const otpButton = document.getElementById('otpButton');\r\n                        otpButton.textContent = \"OTP Verifing....\";\r\n                        otpButton.setAttribute(\"disabled\", 'true');\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = 'limegreen';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'success',\r\n                            title:`OTP verified successfully`,\r\n                        });\r\n                    } else if(otpResponce.data?.arMissField) {\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = '#ff6347';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'error',\r\n                            title:`${otpResponce.data.arMissField[0]} is Required`,\r\n                        });\r\n                    } else {\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = '#ff6347';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'error',\r\n                            title:`${otpResponce.data.msg}`,\r\n                        });\r\n                    }\r\n            } catch(error){\r\n                if(error.message){\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position:'top-end',\r\n                        showCancelButton:false,\r\n                        showConfirmButton:false,\r\n                        timer:4000,\r\n                        timerProgressBar: true,\r\n                        didOpen: (toast) => {\r\n                            const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                            if(timerProgressBar){\r\n                                timerProgressBar.style.backgroundColor = '#ff6347';\r\n                            }\r\n                            toast.onmouseenter = Swal.stopTimer;\r\n                            toast.onmouseleave = Swal.resumeTimer;\r\n                        }\r\n                    });\r\n                    Toast.fire({\r\n                        icon:'error',\r\n                        title:`Refresh this page Try again.`,\r\n                    });\r\n                }\r\n            }\r\n    }\r\n};\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n          <title>Verify OTP</title>\r\n          <meta name=\"description\" content=\"Only the best when you choose products offered on our platform - high quality\r\ningredients for high quality products!\"/>\r\n          <meta name=\"keywords\" content=\"medical,medicine,tablet,hospital products,hospital,hospitals,vitamin,weight less,minerals\"/>\r\n        </Helmet>\r\n        <Row className='m-0 p-0 w-100 h-100 d-flex' style={{background: \"#E2F5FB\"}}>\r\n            <Col className='w-100 h-100 m-0 d-flex justify-content-center align-items-center px-3 py-3 py-sm-3 py-sm-3 py-md-5 px-md-5 py-lg-5 py-xl-4 py-xxl-5'>\r\n                <div className='w-100 m-0 p-0 flex-grow align-items-xl-center justify-content-xl-center rounded-2' style={{borderColor:'#727272', background:'#17414F',borderRadius:'10px'}}>\r\n                    <Row className='d-flex w-100 h-100 m-0 p-0'>\r\n                        <Col className='m-0 d-xl-flex d-xl-flex d-lg-flex d-md-flex d-sm-none d-none' style={{padding:'12px'}}>\r\n                            <div className='m-0 p-0 w-100 rounded-2 d-flex' style={{backgroundImage:`url(${doctorImage})`,backgroundRepeat:'no-repeat',backgroundPosition:'center',backgroundSize:'100% 100%'}}>\r\n                            <div className='m-0 p-3 d-flex align-items-start justify-content-start gap-2 w-50'>\r\n                                <img src={Image1} alt='Image1' className='img-fluid' style={{height:'35px', width:'35px',borderRadius:'50%',border:'3px solid #17414F'}}/>\r\n                                <h5 style={{color:'#FFFFFF'}} className='m-0 p-0 fw-bolder mt-1 mb-1'>Vitamins</h5>\r\n                            </div>\r\n                            </div>\r\n                        </Col> \r\n                        <Col className='d-flex p-5 m-0 align-items-center justify-content-center'>\r\n                            <div className='flex-column m-0 p-0 w-100 p-xl-5'>\r\n                                <h2 className='m-0 p-0 w-100 d-flex' style={{color:'#FFFFFF'}}>Verification Code</h2>\r\n                                <div className='m-0 p-0 my-xxl-3 my-lg-3 my-md-3 my-sm-3 my-3 w-100'>\r\n                                    <p className='m-0 p-0 mt-1 mt-xl-0 mt-sm-1 mt-lg-0 mt-md-0' style={{color:'#FFFFFF'}}>Your reset password verification code is on its way! check your email and get started!</p>\r\n                                </div>\r\n                                <Form className='p-0 m-0 flex-column' onSubmit={(event) => handleSubmit(event)}>\r\n                                    <div className='m-0 p-0 w-75 my-lg-5 my-md-4 my-sm-3 my-3'>\r\n                                        <style>{customStyles}</style>\r\n                                    <Form.Group className='w-100 m-0 p-0 border-0'>\r\n                                        <Form.Label className='text-light'>OTP <span className='fw-bolder m-0 p-0' style={{color:'#FFFFFF'}}>*</span></Form.Label>\r\n                                            <div className='d-flex gap-3 w-100 m-0 p-0'>\r\n                                                {otp.map((_,index) => (\r\n                                                    <Form.Control \r\n                                                    key={index}\r\n                                                    type={\"password\"}\r\n                                                    value={otp[index]}\r\n                                                    ref={(el) => (inputRef.current[index] = el)}\r\n                                                    onKeyDown={(event) => handleKeyDown(event, index)}\r\n                                                    onChange={(event) => handleChange(event, index)}\r\n                                                    maxLength={1} \r\n                                                    className='fw-bolder text-center'\r\n                                                    style={{marginLeft:'0px',border:'2px solid #FFFFFF',boxShadow:'none',outline:'none',background:'rgba(255, 255, 255,0.1)',color:'#FFFFFF'}}/>\r\n                                                ))}\r\n                                            </div>  \r\n                                        </Form.Group>\r\n                                        <div className='m-0 p-0 w-100 my-xxl-4 my-xl-4 my-lg-4 my-md-4 my-sm-4 my-4 gap-2 d-flex'>\r\n                                             <p className='m-0 p-0 mt-1 mt-xl-0 mt-sm-1 mt-lg-0 mt-md-0 fw-bolder text-light'>Didn't receive the OTP? <Link className='text-light px-1' onClick={() => handleResend()}>Resend</Link></p>\r\n                                        </div>\r\n                                        <Button className=\"bg-light mt-2 w-100 fw-bolder text-center border-0\" id=\"otpButton\" type='submit' style={{color:'#17414F'}}>Verify OTP</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            </div> \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n};\r\nexport default ForgotOTP;","import { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport Validator, { trim } from 'validator';\r\nimport Axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { Row, Col, Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport { IoIosLock } from 'react-icons/io';\r\nimport heartImage  from '../../../Assets/Images/doctor.jpeg';\r\nimport Image1 from '../../../Assets/Images/product-8-400x400.png.png';\r\n\r\n\r\nfunction ResetPassword({showComponent, setShowComponent}) {\r\n    const [show, setShow] = useState(false);\r\n    const [ visible, setVisible ] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [ reset, setReset ] = useState({\r\n        password:'',\r\n        confirmpassword:'',\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setReset({\r\n            ...reset,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    const customStyles = `.custom-placeholder::placeholder {\r\n        color: #FFFFFF;\r\n        opacity: 1;\r\n    }`;\r\n\r\n    const handleSubmit = async (event) => {\r\n        if(Validator.isEmpty(reset.password)) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'Password is Required',\r\n            })\r\n        } else if(Validator.isEmpty(reset.confirmpassword)) {\r\n          event.preventDefault();\r\n          const Toast = Swal.mixin({\r\n              toast:true,\r\n              position:'top-end',\r\n              showConfirmButton:false,\r\n              timerProgressBar: true,\r\n              timer:3000,\r\n              didOpen : (toast) => {\r\n                  const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                  if(timerProgressBar) {\r\n                      timerProgressBar.style.backgroundColor = '#ff6347';\r\n                  };\r\n                  toast.onmouseenter = Swal.stopTimer;\r\n                  toast.onmouseleave = Swal.resumeTimer;\r\n              }\r\n          });\r\n          Toast.fire({\r\n              icon:'error',\r\n              title:'Confirm Password is Required',\r\n          })\r\n      } else if(!Validator.isStrongPassword(reset.password)) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'The Password must contain 8 characters, including an uppercase letter, lowercase letter, number and special characters.',\r\n            })\r\n        } else if(!Validator.isStrongPassword(reset.confirmpassword)) {\r\n          event.preventDefault();\r\n          const Toast = Swal.mixin({\r\n              toast:true,\r\n              position:'top-end',\r\n              showConfirmButton:false,\r\n              timerProgressBar: true,\r\n              timer:3000,\r\n              didOpen : (toast) => {\r\n                  const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                  if(timerProgressBar) {\r\n                      timerProgressBar.style.backgroundColor = '#ff6347';\r\n                  };\r\n                  toast.onmouseenter = Swal.stopTimer;\r\n                  toast.onmouseleave = Swal.resumeTimer;\r\n              }\r\n          });\r\n          Toast.fire({\r\n              icon:'error',\r\n              title:'The Confirm Password must contain 8 characters, including an uppercase letter, lowercase letter, number and special characters.',\r\n          })\r\n      } else if(!Validator.equals(reset.password, reset.confirmpassword)) {\r\n        event.preventDefault();\r\n        const Toast = Swal.mixin({\r\n            toast:true,\r\n            position:'top-end',\r\n            showConfirmButton:false,\r\n            timerProgressBar: true,\r\n            timer:3000,\r\n            didOpen : (toast) => {\r\n                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                if(timerProgressBar) {\r\n                    timerProgressBar.style.backgroundColor = '#ff6347';\r\n                };\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n        Toast.fire({\r\n            icon:'error',\r\n            title:'Passwords do not match!',\r\n        })\r\n    } else {\r\n        const email = localStorage.getItem(\"email\");\r\n        const changeDetails = {\r\n            ...reset,\r\n            email: email,\r\n        };\r\n        const trimObject = Object.fromEntries(\r\n            Object.entries(changeDetails).map(([key,value]) => [key, key === \"email\" && typeof value === 'string' ? value.trim() : value])\r\n        )\r\n\r\n        console.log(trimObject);\r\n\r\n        try{\r\n            event.preventDefault();\r\n            const changeResponce = await Axios.post('http://127.0.0.1:5000/vitamins/changePassword',trimObject);\r\n            console.log(changeResponce);\r\n            if(changeResponce.data.status === 200 || changeResponce.data.status === 201){\r\n\r\n                    const changeButton = document.getElementById('changeButton');\r\n                    changeButton.textContent = \"Password Changing....\";\r\n                    changeButton.setAttribute(\"disabled\", 'true');\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position:'top-end',\r\n                        showCancelButton:false,\r\n                        showConfirmButton:false,\r\n                        timer:4000,\r\n                        timerProgressBar: true,\r\n                        didOpen: (toast) => {\r\n                            const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                            if(timerProgressBar){\r\n                                timerProgressBar.style.backgroundColor = 'limegreen';\r\n                            }\r\n                            toast.onmouseenter = Swal.stopTimer;\r\n                            toast.onmouseleave = Swal.resumeTimer;\r\n                        }\r\n                    });\r\n                    Toast.fire({\r\n                        icon:'success',\r\n                        title:`Password Changed successfully`,\r\n                    });\r\n                    navigate(\"/\");\r\n                } else if(changeResponce.data?.arMissField) {\r\n                    event.preventDefault();\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position:'top-end',\r\n                        showCancelButton:false,\r\n                        showConfirmButton:false,\r\n                        timer:4000,\r\n                        timerProgressBar: true,\r\n                        didOpen: (toast) => {\r\n                            const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                            if(timerProgressBar){\r\n                                timerProgressBar.style.backgroundColor = '#ff6347';\r\n                            }\r\n                            toast.onmouseenter = Swal.stopTimer;\r\n                            toast.onmouseleave = Swal.resumeTimer;\r\n                        }\r\n                    });\r\n                    Toast.fire({\r\n                        icon:'error',\r\n                        title:`${changeResponce.data.arMissField[0]} is Required`,\r\n                    });\r\n                } else {\r\n                    event.preventDefault();\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position:'top-end',\r\n                        showCancelButton:false,\r\n                        showConfirmButton:false,\r\n                        timer:4000,\r\n                        timerProgressBar: true,\r\n                        didOpen: (toast) => {\r\n                            const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                            if(timerProgressBar){\r\n                                timerProgressBar.style.backgroundColor = '#ff6347';\r\n                            }\r\n                            toast.onmouseenter = Swal.stopTimer;\r\n                            toast.onmouseleave = Swal.resumeTimer;\r\n                        }\r\n                    });\r\n                    Toast.fire({\r\n                        icon:'error',\r\n                        title:`${changeResponce.data.msg}`,\r\n                    });\r\n                }\r\n        } catch(error){\r\n            if(error.message){\r\n                event.preventDefault();\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position:'top-end',\r\n                    showCancelButton:false,\r\n                    showConfirmButton:false,\r\n                    timer:4000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                        if(timerProgressBar){\r\n                            timerProgressBar.style.backgroundColor = '#ff6347';\r\n                        }\r\n                        toast.onmouseenter = Swal.stopTimer;\r\n                        toast.onmouseleave = Swal.resumeTimer;\r\n                    }\r\n                });\r\n                Toast.fire({\r\n                    icon:'error',\r\n                    title:`Refresh this page Try again.`,\r\n                });\r\n            }\r\n        }\r\n    };\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n          <title>Reset Password</title>\r\n          <meta name=\"description\" content=\"Only the best when you choose products offered on our platform - high quality\r\ningredients for high quality products!\"/>\r\n          <meta name=\"keywords\" content=\"medical,medicine,tablet,hospital products,hospital,hospitals,vitamin,weight less,minerals\"/>\r\n        </Helmet>\r\n        <Row className='m-0 p-0 w-100 h-100 d-flex' style={{background: \"#E2F5FB\"}}>\r\n            <Col className='w-100 h-100 m-0 d-flex justify-content-center align-items-center px-3 py-3 py-sm-3 py-sm-3 py-md-5 px-md-5 py-lg-5 py-xl-4 py-xxl-5'>\r\n                <div className='w-100 m-0 p-0 flex-grow align-items-xl-center justify-content-xl-center rounded-2' style={{borderColor:'#727272', background:'#17414F',borderRadius:'10px'}}>\r\n                    <Row className='d-flex w-100 h-100 m-0 p-0'>\r\n                        <Col className='m-0 d-xl-flex d-xl-flex d-lg-flex d-md-flex d-sm-none d-none' style={{padding:'12px'}}>\r\n                            <div className='m-0 p-0 w-100 rounded-2 d-flex' style={{backgroundImage:`url(${heartImage})`,backgroundRepeat:'no-repeat',backgroundPosition:'center',backgroundSize:'100% 100%'}}>\r\n                            <div className='m-0 p-3 d-flex align-items-start justify-content-start gap-2 w-50'>\r\n                                <img src={Image1} alt='Image1' className='img-fluid' style={{height:'35px', width:'35px',borderRadius:'50%',border:'3px solid #17414F'}}/>\r\n                                <h5 style={{color:'#FFFFFF'}} className='m-0 p-0 fw-bolder mt-1 mb-1'>Vitamins</h5>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className='d-flex p-5 m-0 align-items-center justify-content-center'>\r\n                            <div className='flex-column m-0 p-0 w-100 p-xl-5 p-lg-5 py-md-5'>\r\n                                <h2 className='m-0 p-0 w-100 d-flex' style={{color:'#FFFFFF'}}>Reset Password</h2>\r\n                                <div className='m-0 p-0 my-lg-3 my-md-3 my-sm-3 my-3 w-100'>\r\n                                    <p className='m-0 p-0 mt-1 mt-xl-0 mt-sm-1 mt-lg-0 mt-md-0' style={{color:'#FFFFFF'}}>Your new password must be different</p>\r\n                                    <p className='m-0 p-0 mt-1 mt-xl-0 mt-sm-1 mt-lg-0 mt-md-0' style={{color:'#FFFFFF'}}>From previous used password.</p>\r\n                                </div>\r\n                                <Form className='p-0 m-0 flex-column' onSubmit={(event) => handleSubmit(event)}>\r\n                                    <div className='m-0 p-0 w-75'>\r\n                                        <style>{customStyles}</style>\r\n                                    <Form.Group className='w-100 m-0 p-0 border-0 my-xl-4'>\r\n                                    <Form.Label className='text-light'>Password <span className='fw-bolder m-0 p-0' style={{color:'#FFFFFF'}}>*</span></Form.Label>\r\n                                            <InputGroup className='rounded-2' style={{border:'2px solid #FFFFFF'}}>\r\n                                            <InputGroup.Text style={{marginLeft:'0px',border:'none',borderRadius:'0px',color:'#FFFFFF',background:'rgba(255, 255, 255,0.1',outline:'none',boxShadow:'none'}}><IoIosLock /></InputGroup.Text>\r\n                                                <Form.Control \r\n                                                    type={show ? \"text\" : \"password\"}\r\n                                                    placeholder='Password'\r\n                                                    name='password'\r\n                                                    value={reset.password}\r\n                                                    onChange={(event) => handleChange(event)}\r\n                                                    maxLength={30} \r\n                                                    className='fw-bolder custom-placeholder'\r\n                                                style={{marginLeft:'0px',border:'none',boxShadow:'none',outline:'none',background:'rgba(255, 255, 255,0.1)',color:'#FFFFFF'}}/>\r\n                                              <InputGroup.Text style={{marginLeft:'0px',border:'none',borderRadius:'0px',color:'#FFFFFF',background:'rgba(255, 255, 255,0.1',outline:'none',boxShadow:'none'}}>{show ? <FaEyeSlash style={{cursor:'pointer'}} onClick={() => setShow(false)}/> : <FaEye style={{cursor:'pointer'}} onClick={() => setShow(true)}/>}</InputGroup.Text>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='w-100 m-0 p-0 border-0 my-xl-4 mt-4 mb-2'>\r\n                                      <Form.Label className='text-light'>Confirm Password <span className='fw-bolder m-0 p-0' style={{color:'#FFFFFF'}}>*</span></Form.Label>\r\n                                            <InputGroup className='rounded-2' style={{border:'2px solid #FFFFFF'}}>\r\n                                            <InputGroup.Text style={{marginLeft:'0px',border:'none',borderRadius:'0px',color:'#FFFFFF',background:'rgba(255, 255, 255,0.1',outline:'none',boxShadow:'none'}}><IoIosLock /></InputGroup.Text>\r\n                                                <Form.Control \r\n                                                    type={visible ? \"text\" : \"password\"}\r\n                                                    placeholder='Confirm Password'\r\n                                                    name='confirmpassword'\r\n                                                    value={reset.confirmpassword}\r\n                                                    onChange={(event) => handleChange(event)}\r\n                                                    maxLength={30} \r\n                                                    className='fw-bolder custom-placeholder'\r\n                                                    style={{marginLeft:'0px',border:'none',boxShadow:'none',outline:'none',background:'rgba(255, 255, 255,0.1)',color:'#FFFFFF'}}/>\r\n                                                    <InputGroup.Text style={{marginLeft:'0px',border:'none',borderRadius:'0px',color:'#FFFFFF',background:'rgba(255, 255, 255,0.1',outline:'none',boxShadow:'none'}}>{visible ? <FaEyeSlash style={{cursor:'pointer'}} onClick={() => setVisible(false)}/> : <FaEye style={{cursor:'pointer'}} onClick={() => setVisible(true)} />}</InputGroup.Text>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Button className=\"bg-light w-100 mt-4 mt-md-4 mt-lg-4 mt-xl-4 mt-xxl-4 fw-bolder text-center border-0\" id=\"changeButton\" type='submit' style={{color:'#17414F'}}>Reset Password</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            </div> \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n};\r\nexport default ResetPassword;","import { useState } from 'react';\r\nimport { Row, Col, Button, Container } from 'react-bootstrap';\r\nimport Forgot from '../../Component/Forgot/Email';\r\nimport ForgotOTP from '../../Component/Forgot/Otp';\r\nimport ResetPassword from '../../Component/Forgot/ResetPassword';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nfunction ForgotLayout() {\r\n    const [showComponent, setShowComponent] = useState(() => {\r\n        return Number(localStorage.getItem('showComponent')) || 0;\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('showComponent', showComponent);\r\n    })\r\n\r\n    return (\r\n        <Container className='p-0 m-0 vh-100' fluid>\r\n            <Row className=' d-flex m-0 p-0 h-100'>\r\n                <Col className='d-flex m-0 p-0'>\r\n                    {showComponent === 0 && <Forgot showComponent={showComponent} setShowComponent={setShowComponent} />}\r\n                    {showComponent === 1 && <ForgotOTP showComponent={showComponent} setShowComponent={setShowComponent} />}\r\n                    {showComponent === 2 && <ResetPassword showComponent={showComponent} setShowComponent={setShowComponent} />}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ForgotLayout;"],"names":["_ref","showComponent","setShowComponent","visible","setVisible","useState","show","setShow","forgot","setForgot","useNavigate","email","_jsxs","_Fragment","children","Helmet","_jsx","name","content","Row","className","style","background","Col","borderColor","borderRadius","padding","backgroundImage","concat","heartImage","backgroundRepeat","backgroundPosition","backgroundSize","src","Image1","alt","height","width","border","color","Form","onSubmit","event","async","Validator","preventDefault","Swal","toast","position","showConfirmButton","timerProgressBar","timer","didOpen","document","querySelector","backgroundColor","onmouseenter","onmouseleave","fire","icon","title","trimObject","Object","fromEntries","entries","map","_ref2","key","value","toLowerCase","trim","_emailResponce$data","emailResponce","Axios","post","console","log","data","status","localStorage","setItem","userData","emailButton","getElementById","textContent","setAttribute","showCancelButton","arMissField","msg","error","message","handleSubmit","Group","Label","InputGroup","Text","marginLeft","outline","boxShadow","MdEmail","Control","type","placeholder","onChange","target","_objectSpread","handleChange","maxLength","Link","to","Button","id","length","otp","setOtp","Array","fill","inputRef","useRef","includes","getItem","splitOpt","join","_otpResponce$data","otpResponce","otpButton","_","index","ref","el","current","onKeyDown","handleKeyDown","focus","isNaN","newOtp","onClick","navigate","reset","setReset","password","confirmpassword","changeDetails","_changeResponce$data","changeResponce","changeButton","IoIosLock","FaEyeSlash","cursor","FaEye","Number","useEffect","Container","fluid","Forgot","ForgotOTP","ResetPassword"],"sourceRoot":""}