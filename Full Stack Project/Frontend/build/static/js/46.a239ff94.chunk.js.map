{"version":3,"file":"static/js/46.a239ff94.chunk.js","mappings":"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","sources":["Component/Register/index.js","Layout/Register/index.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Validator from 'validator';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport Axios from 'axios';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Row, Col, Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport { FaEye, FaEyeSlash, FaUserCircle, FaApple ,FaGoogle } from 'react-icons/fa';\r\nimport { GrUserWorker } from 'react-icons/gr';\r\nimport { MdEmail } from 'react-icons/md';\r\nimport { IoIosLock } from 'react-icons/io';\r\nimport heartImage  from '../../Assets/Images/heartImage.jpeg';\r\nimport Image1 from '../../Assets/Images/product-8-400x400.png.png';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction Register() {\r\n    const [ visible, setVisible ] = useState(false);\r\n    const [index, setIndex] = useState(0);\r\n    const [welcome, setWelcome] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const navigate = useNavigate();\r\n    const word = [\"Your health, our priority-welcome to vitamins shop!\", \"Trusted medicines, doorstep delivery-shop with confidence\", \"Carring for you, anytime, anywhere-welcome!\", \"Your one-stop medical shop-fast,reliable, and affordable!\", \"Health made easy-order your essentials today!\", \"Because your well-being matters--safe and secure shopping\"];\r\n    const [ register, setRegister ] = useState({\r\n        firstname:'',\r\n        lastname:'',\r\n        email:'',\r\n        password:'',\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setRegister({\r\n            ...register,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    const customStyles = `.custom-placeholder::placeholder {\r\n        color: #FFFFFF;\r\n        opacity: 1;\r\n    }`;\r\n\r\n    const handleSubmit = async (event) => {\r\n        if(Validator.isEmpty(register.firstname)) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'First Name is Required',\r\n            })\r\n        } else if(Validator.isEmpty(register.lastname)){\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'Last Name is Required',\r\n            })\r\n        } else if(Validator.isEmpty(register.email)) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'Email is Required',\r\n            })\r\n        } else if(Validator.isEmpty(register.password)) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timerProgressBar: true,\r\n                timer:3000,\r\n                didOpen : (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar) {\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    };\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'Password is Required',\r\n            })\r\n        } else if (!Validator.isStrongPassword(register.password)) {\r\n            event.preventDefault();\r\n            const Toast = Swal.mixin({\r\n                toast:true,\r\n                position:'top-end',\r\n                showConfirmButton:false,\r\n                timer:3000,\r\n                timerProgressBar:true,\r\n                didOpen: (toast) => {\r\n                    const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                    if(timerProgressBar){\r\n                        timerProgressBar.style.backgroundColor = '#ff6347';\r\n                    }\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon:'error',\r\n                title:'The Password must contain 8 characters, including an uppercase letter, lowercase letter, number and special characters.',\r\n            });\r\n        } else {\r\n            event.preventDefault();\r\n            const trimObject = Object.fromEntries(\r\n                Object.entries(register).map(([key,value]) => ([key,key === \"email\" ? value.toLowerCase() : value && typeof value === 'string' ? value.trim() : value]))\r\n            );\r\n            try{\r\n                const registerResponce = await Axios.post('http://127.0.0.1:5000/vitamins/createUser',trimObject);\r\n                \r\n                if(registerResponce.data.status === 200 || registerResponce.data.status === 201){\r\n                        const registerButton = document.getElementById(\"registerButton\");\r\n                        registerButton.textContent = \"Account Creating....\";\r\n                        registerButton.setAttribute(\"disabled\", \"true\");\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = 'limegreen';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                                navigate('/');\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'success',\r\n                            title:`Registered Your Account Successfully`,\r\n                        });\r\n                    } else if(registerResponce.data?.arMissField){\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = 'limegreen';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'error',\r\n                            title:`${registerResponce.data.arMissField[0]} is Required`,\r\n                        });\r\n                    } else {\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position:'top-end',\r\n                            showCancelButton:false,\r\n                            showConfirmButton:false,\r\n                            timer:4000,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                                const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                                if(timerProgressBar){\r\n                                    timerProgressBar.style.backgroundColor = '#ff6347';\r\n                                }\r\n                                toast.onmouseenter = Swal.stopTimer;\r\n                                toast.onmouseleave = Swal.resumeTimer;\r\n                            }\r\n                        });\r\n                        Toast.fire({\r\n                            icon:'error',\r\n                            title:`${registerResponce.data.msg}`,\r\n                        });\r\n                    }\r\n            } catch(error) {\r\n                if(error.message){\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position:'top-end',\r\n                        showCancelButton:false,\r\n                        showConfirmButton:false,\r\n                        timer:4000,\r\n                        timerProgressBar: true,\r\n                        didOpen: (toast) => {\r\n                            const timerProgressBar = document.querySelector('.swal2-timer-progress-bar');\r\n                            if(timerProgressBar){\r\n                                timerProgressBar.style.backgroundColor = '#ff6347';\r\n                            }\r\n                            toast.onmouseenter = Swal.stopTimer;\r\n                            toast.onmouseleave = Swal.resumeTimer;\r\n                        }\r\n                    });\r\n                    Toast.fire({\r\n                        icon:'error',\r\n                        title:`Refresh this page Try again.`,\r\n                    });\r\n            } \r\n        }\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setIndex((prevIndex) => (prevIndex + 1) % word.length)\r\n            console.log(index);\r\n        }, 10000);\r\n\r\n        return () => clearInterval(interval);\r\n    })\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n          <title>Login</title>\r\n          <meta name=\"description\" content=\"Only the best when you choose products offered on our platform - high quality\r\ningredients for high quality products!\"/>\r\n          <meta name=\"keywords\" content=\"medical,medicine,tablet,hospital products,hospital,hospitals,vitamin,weight less,minerals\"/>\r\n        </Helmet>\r\n        <Row className='m-0 p-0 w-100 h-100 d-flex' style={{background: \"#E2F5FB\"}}>\r\n            <Col className='w-100 h-100 m-0 d-flex justify-content-center align-items-center px-3 py-3 py-sm-3 py-sm-3 py-md-5 px-md-5 py-lg-5 py-xl-4 py-xxl-5'>\r\n                <div className='w-100 m-0 p-0 d-flex align-items-xl-center justify-content-xl-center rounded-2' style={{borderColor:'#727272', background:'#17414F',borderRadius:'10px'}}>\r\n                    <Row className='d-flex w-100 m-0 p-0'>\r\n                        <Col className='m-0 d-xl-flex d-xl-flex d-lg-flex d-md-flex d-sm-none d-none' style={{padding:'12px'}}>\r\n                            <div className='m-0 p-0 w-100 rounded-2 flex-column' style={{backgroundImage:`url(${heartImage})`,backgroundRepeat:'no-repeat',backgroundPosition:'center',backgroundSize:'100% 100%'}}>\r\n                            <div className='m-0 p-3 d-flex align-items-start justify-content-start gap-2 w-50'>\r\n                                <img src={Image1} alt='Image1' className='img-fluid' style={{height:'35px', width:'35px',borderRadius:'50%',border:'3px solid #17414F'}}/>\r\n                                <h5 style={{color:'#FFFFFF'}} className='m-0 p-0 fw-bolder mt-1 mb-1'>Vitamins</h5>\r\n                            </div>\r\n                            <div className=\"w-100 d-flex justify-content-centet align-items-center m-0 px-3\">\r\n                                <p className=\"fw-bolder fs-5 m-0 p-0 w-100\" style={{color:'#17414F'}}>{word[index]}</p>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className='d-flex p-5 m-0 align-items-center justify-content-center'>\r\n                            <div className='flex-column m-0 p-0 w-100 py-xl-4'>\r\n                                <h2 className='m-0 p-0 w-100 d-flex' style={{color:'#FFFFFF'}}>Create an account</h2>\r\n                                <div className='m-0 p-0 w-100 gap-2 d-flex mt-xl-0 mb-xl-2 mt-lg-2 mb-lg-2 mt-md-2 mb-md-2 mt-sm-1 mb-sm-1 mb-1 mt-1'>\r\n                                    <p className='m-0 p-0 gap-3 mt-1 mt-xl-0 mt-sm-1 mt-lg-0 mt-md-0' style={{color:'#FFFFFF'}}>Already have an account? <Link className='text-light fw-bolder text-decoration-none' to=\"/\">login</Link></p>\r\n                                </div>\r\n                                <Form className='p-0 m-0 flex-column' onSubmit={(event) => handleSubmit(event)}>\r\n                                <div className='w-100 m-0 p-0 d-md-flex gap-2 mt-3'>\r\n                                    <style>{customStyles}</style>\r\n                                    <Form.Group className='w-100 m-0 p-0 border-0'>\r\n                                            <InputGroup className='rounded-2' style={{border:'2px solid #FFFFFF'}}>\r\n                                            <InputGroup.Text style={{marginLeft:'0px',border:'none',borderRadius:'0px',color:'#FFFFFF',background:'rgba(255, 255, 255,0.1',outline:'none',boxShadow:'none'}}><FaUserCircle /></InputGroup.Text>\r\n                                                <Form.Control \r\n                                                    type={\"text\"}\r\n                                                    placeholder='First Name'\r\n                                                    name='firstname'\r\n                                                    value={register.firstname}\r\n                                                    onChange={(event) => handleChange(event)}\r\n                                                    maxLength={400} \r\n                                                    className='fw-bolder custom-placeholder'\r\n                                                style={{marginLeft:'0px',border:'none',boxShadow:'none',outline:'none',background:'rgba(255, 255, 255,0.1)',color:'#FFFFFF'}}/>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group className='w-100 m-0 p-0 border-0 mt-4 mt-sm-4 mt-md-0 mt-lg-0 mt-xl-0 mt-xxl-0'>\r\n                                            <InputGroup className='rounded-2' style={{border:'2px solid #FFFFFF'}}>\r\n                                            <InputGroup.Text style={{marginLeft:'0px',border:'none',background:'rgba(255, 255, 255, 0.1)',color:'#FFFFFF'}}><FaUserCircle /></InputGroup.Text>\r\n                                                <Form.Control \r\n                                                type=\"text\"\r\n                                                placeholder='Last Name'\r\n                                                name='lastname'\r\n                                                value={register.lastname}\r\n                                                onChange={(event) => handleChange(event)}\r\n                                                maxLength={30}\r\n                                                className='fw-bolder custom-placeholder'\r\n                                                style={{marginLeft:'0px',border:'none',boxShadow:'none',outline:'none',background:'rgba(255, 255, 255, 0.1)',color:'#FFFFFF'}}/>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className='flex-row m-0 p-0 gap-2'>\r\n                                    <Form.Group className='w-100 m-0 p-0 border-0 mt-4'>\r\n                                        <InputGroup className='rounded-2' style={{border:'2px solid #FFFFFF'}}>\r\n                                        <InputGroup.Text style={{marginLeft:'0px',border:'none',background:'rgba(255, 255, 255, 0.1)',color:'#FFFFFF'}}><MdEmail/></InputGroup.Text>\r\n                                            <Form.Control \r\n                                            type=\"text\"\r\n                                            placeholder='Email'\r\n                                            name='email'\r\n                                            value={register.email}\r\n                                            onChange={(event) => handleChange(event)}\r\n                                            maxLength={200}\r\n                                            className='fw-bolder custom-placeholder'\r\n                                            style={{marginLeft:'0px',border:'none',boxShadow:'none',outline:'none',background:'rgba(255, 255, 255, 0.1)',color:'#FFFFFF'}}/>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group className='w-100 m-0 p-0 border-0 mt-4'>\r\n                                        <InputGroup className='rounded-2' style={{border:'2px solid #FFFFFF'}}>\r\n                                        <InputGroup.Text style={{marginLeft:'0px',border:'none',background:'rgba(255, 255, 255, 0.1)',color:'#FFFFFF'}}><IoIosLock /></InputGroup.Text>\r\n                                             <Form.Control \r\n                                                type={visible ? \"text\" : \"password\"}\r\n                                                placeholder='Password'\r\n                                                name='password'\r\n                                                value={register.password}\r\n                                                onChange={(event) => handleChange(event)}\r\n                                                maxLength={30}\r\n                                                className='fw-bolder custom-placeholder'\r\n                                                style={{marginLeft:'0px',border:'none',boxShadow:'none',outline:'none',background:'rgba(255, 255, 255, 0.1)',color:'#FFFFFF'}}/>\r\n                                             <InputGroup.Text style={{marginLeft:'0px',border:'none',background:'rgba(255, 255, 255, 0.1)',color:'#FFFFFF'}}>{visible ? <FaEyeSlash onClick={() => setVisible(false)} style={{cursor:\"pointer\"}}/> : <FaEye onClick={() => setVisible(true)} style={{cursor:\"pointer\"}}/>}</InputGroup.Text>\r\n                                         </InputGroup>\r\n                                     </Form.Group>\r\n                                    <Button className=\"bg-light w-100 mt-4 fw-bolder text-center border-0\" id='registerButton' type='submit' style={{color:'#17414F'}}>Create account</Button>\r\n                                    <p className='w-100 text-center mt-1 mb-1 text-light fw-bolder'>OR</p>\r\n                                    <div className='w-100 m-0 p-0 d-flex justify-content-center align-items-center gap-2'>\r\n                                        <Button  className='w-50 bg-transparent fw-bolder text-center' style={{color:'#FFFFFF',border:'2px solid #FFFFFF'}}>Google</Button>\r\n                                        <Button className='w-50 bg-transparent fw-bolder text-center' style={{color:'#FFFFFF',border:'2px solid #FFFFFF'}}>Apple</Button>\r\n                                    </div>\r\n                                    </div>\r\n                                </Form>\r\n                            </div> \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Register;","import {Row, Col, Button, Container} from 'react-bootstrap';\r\nimport Register from '../../Component/Register';\r\nimport React from \"react\";\r\n\r\nfunction RegisterLayout() {\r\n    return(\r\n        <Container fluid className=\"d-flex m-0 p-0 vh-100\">\r\n            <Row className=\"d-flex m-0 p-0 w-100\">\r\n                <Col className=\"d-flex m-0 p-0\">\r\n                    <Register />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\nexport default RegisterLayout;"],"names":["visible","setVisible","useState","index","setIndex","welcome","setWelcome","show","setShow","navigate","useNavigate","word","register","setRegister","firstname","lastname","email","password","handleChange","event","name","value","target","_objectSpread","useEffect","interval","setInterval","prevIndex","length","console","log","clearInterval","_jsxs","_Fragment","children","Helmet","_jsx","content","Row","className","style","background","Col","borderColor","borderRadius","padding","backgroundImage","concat","heartImage","backgroundRepeat","backgroundPosition","backgroundSize","src","Image1","alt","height","width","border","color","Link","to","Form","onSubmit","async","Validator","preventDefault","Swal","toast","position","showConfirmButton","timerProgressBar","timer","didOpen","document","querySelector","backgroundColor","onmouseenter","onmouseleave","fire","icon","title","trimObject","Object","fromEntries","entries","map","_ref","key","toLowerCase","trim","_registerResponce$dat","registerResponce","Axios","post","data","status","registerButton","getElementById","textContent","setAttribute","showCancelButton","arMissField","msg","error","message","handleSubmit","Group","InputGroup","Text","marginLeft","outline","boxShadow","FaUserCircle","Control","type","placeholder","onChange","maxLength","MdEmail","IoIosLock","FaEyeSlash","onClick","cursor","FaEye","Button","id","Container","fluid","Register"],"sourceRoot":""}